{"version":3,"sources":["Header.js","EditFlashcardDialog.js","FlashCard.js","CardGrid.js","App.js","index.js"],"names":["Header","AppBar","position","Toolbar","Typography","variant","component","EditFlashcardDialog","props","React","useState","flashcard","content","setContent","Dialog","open","onClose","handleClose","aria-labelledby","aria-describedby","onSubmit","e","id","DialogTitle","DialogContent","TextField","autoFocus","value","label","fullWidth","onChange","target","DialogActions","Button","onClick","color","type","useStyles","makeStyles","root","minWidth","title","fontSize","pos","marginBottom","FlashCard","setOpen","classes","Card","className","CardContent","subtitle","CardActions","Grid","container","item","xs","md","align","size","IconButton","aria-label","preventDefault","CardGrid","flashcardItems","flashcards","map","lg","handleSubmit","spacing","App","setFlashcards","direction","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.0584a9fc.chunk.js","sourcesContent":["import React from \"react\"\r\nimport { AppBar, Toolbar, Typography} from \"@material-ui/core\";\r\n\r\nconst Header = () =>  {\r\n    return (\r\n        <AppBar position=\"static\">\r\n            <Toolbar>\r\n                <Typography variant=\"h4\" component=\"h1\">Flash</Typography>\r\n            </Toolbar>\r\n        </AppBar>\r\n    )\r\n}\r\n\r\nexport default Header","import React from \"react\";\r\nimport { Dialog, DialogActions, DialogTitle, DialogContent, Button, TextField} from \"@material-ui/core\";   \r\n\r\n\r\nfunction EditFlashcardDialog(props) {\r\n  const [content, setContent] = React.useState(props.flashcard.content);\r\n\r\n  return (\r\n      <Dialog\r\n        open={props.open}\r\n        onClose={props.handleClose}\r\n        aria-labelledby=\"alert-dialog-title\"\r\n        aria-describedby=\"alert-dialog-description\"\r\n      >\r\n        <form onSubmit={(e) => props.onSubmit(e, props.flashcard.id, content)}>\r\n        <DialogTitle id=\"alert-dialog-title\">{\"Edit\"}</DialogTitle>\r\n        <DialogContent>\r\n          <TextField\r\n            autoFocus\r\n            value={content}\r\n            label=\"Content\"\r\n            variant=\"outlined\"\r\n            id=\"content\"\r\n            fullWidth\r\n            onChange={(e) => setContent(e.target.value)}\r\n          />\r\n        </DialogContent>\r\n        <DialogActions>\r\n          <Button onClick={props.handleClose} color=\"primary\">\r\n            Cancel\r\n          </Button>\r\n          <Button type=\"submit\" color=\"primary\" autoFocus>\r\n            Save\r\n          </Button>\r\n        </DialogActions>\r\n        </form>\r\n      </Dialog>\r\n  )\r\n}\r\n\r\nexport default EditFlashcardDialog\r\n","import React from \"react\";\r\nimport { Card, CardContent, Typography, CardActions, Button, IconButton, Grid} from \"@material-ui/core\";\r\nimport DeleteIcon from '@material-ui/icons/Delete';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport EditFlashcardDialog from \"./EditFlashcardDialog\";\r\nimport { useState } from 'react';\r\n\r\nconst useStyles = makeStyles({\r\n  root: {\r\n    minWidth: 275,\r\n  },\r\n  title: {\r\n    fontSize: 14,\r\n  },\r\n  pos: {\r\n    marginBottom: 12,\r\n  },\r\n});\r\n\r\n\r\nfunction FlashCard(props) {\r\n  const [open, setOpen] = useState(false);\r\n\r\n  const handleClose = () => {\r\n    setOpen(false);\r\n  };\r\n  \r\n  const handleOpen = () => {\r\n    setOpen(true);\r\n  };\r\n\r\n  const handleSubmit = (e, id, content) => {\r\n    e.preventDefault();\r\n    props.onSubmit(id, content);\r\n    handleClose();\r\n  }\r\n\r\n  const classes = useStyles();\r\n  return (\r\n    <div>\r\n      <Card className={classes.root}>\r\n        <CardContent>\r\n          <Typography variant=\"h5\" component=\"h2\">\r\n            {props.flashcard.title}\r\n          </Typography>\r\n          <br />\r\n          <Typography className={classes.pos} color=\"textSecondary\">\r\n            {props.flashcard.subtitle}\r\n          </Typography>\r\n          <Typography variant=\"body2\" component=\"p\">\r\n            {props.flashcard.content}\r\n          </Typography>\r\n        </CardContent>\r\n        <CardActions>\r\n          <Grid container>\r\n            <Grid item xs={2} md={2} align=\"center\">\r\n              <Button \r\n                variant=\"outlined\" \r\n                color=\"primary\" \r\n                size=\"small\" \r\n                onClick={handleOpen}>\r\n                  Edit\r\n                </Button>\r\n            </Grid>\r\n            <Grid item xs={8} md={8}/>\r\n            <Grid item xs={2} md={2} align=\"center\">\r\n              <IconButton variant=\"contained\" color=\"secondary\" aria-label=\"delete\">\r\n                <DeleteIcon />\r\n              </IconButton>\r\n            </Grid>\r\n          </Grid>\r\n        </CardActions>\r\n      </Card>\r\n      <EditFlashcardDialog \r\n        open={open} \r\n        handleClose={handleClose}\r\n        onSubmit={handleSubmit}\r\n        flashcard={props.flashcard}\r\n      />\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default FlashCard","import React from \"react\";\r\nimport FlashCard from \"./FlashCard\"\r\nimport { Grid } from \"@material-ui/core\"\r\n\r\n\r\n\r\nfunction CardGrid(props) {\r\n  const flashcardItems = props.flashcards.map(flashcard => {\r\n    return (\r\n      <Grid item xs={12} md={6} lg={4}>\r\n        <FlashCard \r\n          flashcard={flashcard}\r\n          onSubmit={(id, value) => props.handleSubmit(id, value)}\r\n        />\r\n      </Grid>\r\n    )\r\n  })\r\n  return (\r\n    <Grid container spacing={2}>\r\n      {flashcardItems}\r\n    </Grid>\r\n  )\r\n}\r\n\r\nexport default CardGrid","import React from \"react\"\r\nimport { Grid } from \"@material-ui/core\";\r\nimport Header from \"./Header\"\r\nimport CardGrid from \"./CardGrid\"\r\n\r\nfunction App() {\r\n  const [flashcards, setFlashcards] = React.useState([\r\n    {\r\n      id: 1,\r\n      title: \"title\", \r\n      subtitle: \"subtitle1\",\r\n      content: \"this is some text\"\r\n    },\r\n    {\r\n      id: 2,\r\n      title: \"title2\", \r\n      subtitle: \"subtitle2\",\r\n      content: \"this is some more text\"\r\n    },\r\n    {\r\n      id: 3,\r\n      title: \"title3\", \r\n      subtitle: \"3\",\r\n      content: \"no3\"\r\n    },\r\n    {\r\n      id: 4,\r\n      title: \"yay\", \r\n      subtitle: \"more4\",\r\n      content: \"this is  more text4\"\r\n    },\r\n    { \r\n      id: 5,\r\n      title: \"5thing\", \r\n      subtitle: \"subtitle5\",\r\n      content: \"this is some more tex5\"\r\n    },\r\n    {\r\n      id: 5,\r\n      title: \"6a\", \r\n      subtitle: \"subtitle6\",\r\n      content: \"this is some more tex6\"\r\n    },\r\n  ]);\r\n\r\n  const handleSubmit = (id, content) => {\r\n    setFlashcards(\r\n      flashcards.map(flashcard => {\r\n        if (flashcard.id === id) flashcard.content = content;\r\n        return (\r\n          flashcard\r\n        )\r\n      })\r\n    )\r\n  }\r\n\r\n  \r\n\r\n  return(\r\n    <div>\r\n      <Grid container direction=\"column\">\r\n        <Grid item>\r\n          <Header />\r\n        </Grid>\r\n        <Grid item container>\r\n          <Grid item xs={1}/>\r\n          <Grid item xs={10}>\r\n            <CardGrid \r\n              flashcards={flashcards}\r\n              handleSubmit={(id, value) => handleSubmit(id, value)}\r\n            />\r\n          </Grid>\r\n          <Grid item xs={1}/>\r\n        </Grid>\r\n      </Grid>\r\n    </div>\r\n  )\r\n  \r\n}\r\n\r\nexport default App ","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\n\nReactDOM.render(\n  <App />,\n  document.getElementById('root')\n);\n"],"sourceRoot":""}